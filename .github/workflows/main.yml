# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: 
          npm install
          npm ci
      - name: Creating .envfile
        run : |
          
   




name: Backend Build and Deploy

on:
  push:
    branches:
      - 'main'

jobs:
  Backend-Build-And-Deploy:
    runs-on: self-hosted
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: 'Create env file'
        run: |
          touch .env
          echo VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }} >> .env
          echo RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} >> .env
          echo MAIL_FROM=${{ secrets.MAIL_FROM }} >> .env
          cat .env
      # - 
      #   name: Building Express app
      #   working-directory: ./backend
      #   run: |
      #       npm run build
      #       ls
      #       docker build --platform linux/amd64,linux/arm64 -t hiransanjeewa/student-management-system-backend:latest --push .
      # docker push hiransanjeewa/student-management-system-backend:latest
      
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: hiransanjeewa/student-management-system-frontend:latest

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@master
        with:
         host: ${{ secrets.EC2_INSTANCE_IP }}
         username: ${{ secrets.SSH_USERNAME }}
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         script: |
          sudo apt update
          sudo apt install -y docker.io

          docker stop student-management-system-frontend
          docker rm student-management-system-frontend
                 
          docker rmi hiransanjeewa/student-management-system-frontend:latest
         
          docker system prune -f
         
          docker pull hiransanjeewa/student-management-system-frontend:latest
   
          docker run -d -p 80:5173 --name student-management-system-frontend hiransanjeewa/student-management-system-frontend:latest

          docker run -p 80:5173 --name student-management-system-frontend
         
